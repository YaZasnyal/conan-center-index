diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5ce0d53..b145dfd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -534,255 +534,9 @@ if(NOT PYTHON)
 endif(NOT PYTHON)
 
 
-
-# Templates builds
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/skin1.cpp
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-s skin1 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/skin1.cpp 
-			${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_skin1.tmpl 
-			${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_view1.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_skin1.tmpl 
-		${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_view1.tmpl)
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/skin2.cpp
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-s skin2 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/skin2.cpp 
-			${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_skin2.tmpl 
-			${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_view1.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_skin2.tmpl 
-		${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_view1.tmpl)
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_skin_a.cpp
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_skin_a.cpp 
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_a.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_a.tmpl)
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_skin_b.cpp
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_skin_b.cpp 
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_b.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_b.tmpl)
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_skin.cpp
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_skin.cpp 
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin.tmpl)
-
-
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_a.cpp ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_a.h
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_a.cpp -H ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_a.h
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_a.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_a.tmpl)
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_b.cpp ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_b.h
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_b.cpp -H ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin_b.h
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_b.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin_b.tmpl)
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin.cpp ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin.h
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin.cpp -H ${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin.h
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin.tmpl)
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_plugin.cpp 
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_plugin.cpp
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_plugin.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin.h
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin.tmpl
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_plugin.tmpl
-		)
-
-
-add_custom_command(
-	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/tc_plugin2.cpp 
-	COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		-o ${CMAKE_CURRENT_BINARY_DIR}/tc_plugin2.cpp
-			${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_plugin2.tmpl
-	DEPENDS 
-		${CMAKE_CURRENT_BINARY_DIR}/tc_sep_skin.h
-		${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_skin.tmpl
-		${CMAKE_CURRENT_SOURCE_DIR}/tests/tc_plugin2.tmpl
-		)
-
-
-
-
-
-
-if(NOT DISABLE_SHARED)
-	add_custom_command(
-		OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/skin3.cpp
-		COMMAND ${PYTHON} ${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-			-s skin3 
-			-o ${CMAKE_CURRENT_BINARY_DIR}/skin3.cpp 
-				${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_skin2.tmpl 
-				${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_view1.tmpl
-		DEPENDS 
-			${CMAKE_CURRENT_SOURCE_DIR}/bin/cppcms_tmpl_cc 
-			${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_skin2.tmpl 
-			${CMAKE_CURRENT_SOURCE_DIR}/src/hello_world_view1.tmpl)
-	add_library(skin3 SHARED skin3.cpp)
-	set(SKIN3_DEFS DLL_EXPORT)
-	set_target_properties(skin3 PROPERTIES
-				COMPILE_DEFINITIONS "${SKIN3_DEFS}")
-	target_link_libraries(skin3 ${CPPCMS_LIB})
-
-	foreach(SKIN tc_skin_a tc_skin_b tc_skin tc_sep_skin_a tc_sep_skin_b tc_sep_skin tc_plugin tc_plugin2)
-		add_library(${SKIN} SHARED ${CMAKE_CURRENT_BINARY_DIR}/${SKIN}.cpp)
-		target_link_libraries(${SKIN} ${CPPCMS_LIB})
-		if(IS_WINDOWS)
-			set_target_properties(${SKIN} PROPERTIES COMPILE_DEFINITIONS DLL_EXPORT)
-		endif()
-	endforeach()
-	target_link_libraries(tc_plugin2 tc_sep_skin)
-
-	add_library(plugin SHARED tests/test_plugin_so.cpp)
-	target_link_libraries(plugin ${CPPCMS_LIB})
-	if(IS_WINDOWS)
-		set_target_properties(plugin PROPERTIES COMPILE_DEFINITIONS DLL_EXPORT)
-	endif()
-
-
-
-endif(NOT DISABLE_SHARED)
-
-
-
-add_executable(hello_world src/hello_world.cpp skin1.cpp skin2.cpp)
-target_link_libraries(hello_world ${CPPCMS_LIB})
-
-if(NOT DISABLE_TCPCACHE)
-	add_executable(cppcms_scale src/cache_server_main.cpp)
-	target_link_libraries(cppcms_scale ${CPPCMS_LIB})
-	if(WIN32 OR CYGWIN)
-		set_target_properties(cppcms_scale PROPERTIES COMPILE_DEFINITIONS DLL_EXPORT)
-	endif()
-endif()
-
-add_executable(cppcms_make_key src/make_key.cpp)
-target_link_libraries(cppcms_make_key ${CPPCMS_LIB})
-
-add_executable(cppcms_config_find_param src/cppcms_config_find_param.cpp src/json.cpp)
-if(DISABLE_SHARED)
-	target_link_libraries(cppcms_config_find_param booster-static)
-else(DISABLE_SHARED)
-	target_link_libraries(cppcms_config_find_param booster)
-endif(DISABLE_SHARED)
-
-#########################################
-# Tests
-#########################################
-
-set(ALL_TESTS 
-	form_test
-	proto_test
-	pool_test
-	disco_test
-	http_timeouts_test
-	file_server_test
-	encryptor_test
-	storage_test
-	json_test
-	base64_test
-	forwarder_test
-	jsonrpc_test
-	cookie_test
-	multipart_parser_test
-	content_type_parser_test
-	serialization_test
-	status_test
-	xss_test
-	rewrite_test
-	url_mapper_test
-	copy_filter_test
-	gzip_test
-	session_interface_test
-	secure_post_test
-	mount_point_test
-	todec_test
-	hash_map_test
-	response_test
-	file_buffer_test
-	filter_test
-	plugin_test
-	)
-
-if(NOT DISABLE_PREFORK_CACHE AND NOT IS_WINDOWS)
-	set(ALL_TESTS ${ALL_TESTS} allocator_test)
-endif()
-
-if(NOT DISABLE_TCPCACHE)
-	set(ALL_TESTS ${ALL_TESTS} cache_backend_test cache_frontend_test)
-endif()
-
-if(NOT DISABLE_SHARED)
-	set(ALL_TESTS ${ALL_TESTS} 
-		tc_test
-		loadable_storage_test
-		)
-endif()
-
-if(NOT IS_WINDOWS)
-	set(ALL_TESTS ${ALL_TESTS} cppcms_service_test)
-endif()
-
-foreach(TEST ${ALL_TESTS})
-	add_executable(${TEST} tests/${TEST}.cpp)
-	target_link_libraries(${TEST} ${CPPCMS_LIB})
-endforeach()
-
-add_executable(external_session_test tests/external_session_test.c)
-target_link_libraries(external_session_test ${CPPCMS_LIB})
-set(ALL_TESTS ${ALL_TESTS} external_session_test)
-if(NOT DISABLE_GZIP)
-	target_link_libraries(response_test ${ZLIB})
-endif()
-
-#####################################
-# End of tests
-#####################################
-
 # These are use export
 if(IS_WINDOWS AND NOT DISABLE_SHARED)
-	set_target_properties(${ALL_TESTS} hello_world cppcms PROPERTIES
+	set_target_properties(cppcms PROPERTIES
 				COMPILE_DEFINITIONS DLL_EXPORT)
 endif()
 
@@ -802,11 +556,7 @@ if(MSVC AND NOT DISABLE_STATIC)
 endif(MSVC AND NOT DISABLE_STATIC)
 
 configure_file(config.cmake.h cppcms/config.h)
-
-set(CPPCMS_INSTALL_TARGETS ${CPPCMS_LIBS} cppcms_config_find_param cppcms_make_key)
-if(NOT DISABLE_TCPCACHE)
-	set(CPPCMS_INSTALL_TARGETS ${CPPCMS_INSTALL_TARGETS} cppcms_scale)
-endif()
+set(CPPCMS_INSTALL_TARGETS ${CPPCMS_LIBS})
 
 #################
 # Installation
@@ -818,290 +568,8 @@ install(TARGETS ${CPPCMS_INSTALL_TARGETS}
 	LIBRARY DESTINATION ${LIBDIR}
 	ARCHIVE DESTINATION ${LIBDIR}
 	PUBLIC_HEADER DESTINATION include/cppcms)
-install(PROGRAMS bin/cppcms_tmpl_cc bin/cppcms_run
+install(PROGRAMS bin/cppcms_tmpl_cc
 	DESTINATION bin)
 
 install(DIRECTORY cppcms DESTINATION include
         PATTERN ".svn" EXCLUDE)
-
-
-#############
-# TESTS
-#############
-		
-
-
-set(CNF "${CMAKE_CURRENT_SOURCE_DIR}/tests")
-
-add_test(base64_test base64_test)
-add_test(todec_test todec_test)
-add_test(response_test response_test)
-add_test(encryptor_test encryptor_test "${CNF}")
-add_test(storage_test storage_test)
-add_test(json_test json_test)
-add_test(hash_map_test hash_map_test)
-if(NOT DISABLE_PREFORK_CACHE AND NOT IS_WINDOWS)
-	add_test(allocator_test allocator_test)
-endif()
-
-add_test(multipart_parser_test multipart_parser_test "${CNF}")
-add_test(content_type_parser_test content_type_parser_test)
-if(NOT DISABLE_TCPCACHE)
-	add_test(cache_backend_test cache_backend_test)
-endif()
-add_test(serialization_test serialization_test)
-add_test(xss_test xss_test)
-add_test(rewrite_test rewrite_test)
-add_test(url_mapper_test url_mapper_test)
-add_test(copy_filter_test copy_filter_test)
-add_test(mount_point_test mount_point_test)
-add_test(file_buffer_test file_buffer_test)
-if(NOT DISABLE_SHARED)
-	add_test(tc_test_shared tc_test "--shared" "${CNF}")
-	add_test(tc_test_separate tc_test "--separate" "${CNF}")
-	add_test(plugin_test plugin_test "${CMAKE_CURRENT_BINARY_DIR}")
-endif()
-
-add_test(status_test
-	status_test "-c" "${CNF}/status_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/status_test.py")
-
-add_test(pool_test
-	pool_test "-c" "${CNF}/pool_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/pool_test.py")
-
-add_test(filter_test
-	filter_test "-c" "${CNF}/filter_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/filter_test.py")
-
-add_test(async_status_test
-	status_test "-c" "${CNF}/status_test.js" "--test-async=async"
-	"--test-exec=${PYTHON} ${CNF}/status_test.py async")
-
-add_test(form_test
-	form_test "-c" "${CNF}/form_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/form_test.py")
-
-add_test(cookie_test
-	cookie_test "-c" "${CNF}/cookie_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/cookie_test.py")
-
-
-add_test(internal_forwarder_test 
-	forwarder_test "-c" "${CNF}/forwarder_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/forwarder_test.py"
-	"--test-internal=true")
-
-add_test(forwarder_test
-	forwarder_test "-c" "${CNF}/forwarder_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/forwarder_test.py"
-	"--test-internal=false")
-
-add_test(jsonrpc_test
-	jsonrpc_test "-c" "${CNF}/jsonrpc_test.js"
-	"--test-exec=${PYTHON} ${CNF}/jsonrpc_test.py")
-
-add_test(http_timeouts_test_read
-	http_timeouts_test "-c" "${CNF}/proto_test.js" 
-	"--service-api=http" "--service-port=8080" "--service-ip=127.0.0.1" "--http-timeout=5" "--logging-level=debug"
-	"--test-write=false"
-	"--test-exec=${PYTHON} ${CNF}/http_timeouts_test.py read")
-
-#
-# In future maybe
-#
-#if(${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD")
-#	set(HTTP_TIMEOUT 15)
-#else()
-#	set(HTTP_TIMEOUT 5)
-#endif()
-#
-
-set(HTTP_TIMEOUT 15)
-
-add_test(http_timeouts_test_write
-	http_timeouts_test "-c" "${CNF}/proto_test.js" 
-	"--service-api=http" "--service-port=8080" "--service-ip=127.0.0.1" "--http-timeout=${HTTP_TIMEOUT}" "--logging-level=debug" "--service-sndbuf=32786" "--service-rcvbuf=32768"
-	"--test-write=true"
-	"--test-exec=${PYTHON} ${CNF}/http_timeouts_test.py write ${HTTP_TIMEOUT}")
-
-
-add_test(file_server_test
-	file_server_test "-c" "${CNF}/file_server_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/file_server_test.py"
-	"-U" "${CNF}"
-	)
-
-add_test(file_server_test_no_links
-	file_server_test "-c" "${CNF}/file_server_test.js" "--file_server-check_symlink=false" 
-	"--test-exec=${PYTHON} ${CNF}/file_server_test.py no_links"
-	"-U" "${CNF}"
-	)
-
-add_test(file_server_with_listing_test
-	file_server_test "-c" "${CNF}/file_server_test.js" 
-	"--file_server-listing=true"
-	"--test-exec=${PYTHON} ${CNF}/file_server_test.py listing"
-	"-U" "${CNF}"
-	)
-
-
-
-add_test(file_server_test_async
-	file_server_test "-c" "${CNF}/file_server_test.js" "--file_server-async=true"
-	"--test-exec=${PYTHON} ${CNF}/file_server_test.py"
-	"-U" "${CNF}"
-	)
-
-add_test(file_server_test_no_links_async
-	file_server_test "-c" "${CNF}/file_server_test.js" "--file_server-check_symlink=false" "--file_server-async=true" 
-	"--test-exec=${PYTHON} ${CNF}/file_server_test.py no_links"
-	"-U" "${CNF}"
-	)
-
-add_test(file_server_with_listing_test_async
-	file_server_test "-c" "${CNF}/file_server_test.js" "--file_server-async=true" 
-	"--file_server-listing=true"
-	"--test-exec=${PYTHON} ${CNF}/file_server_test.py listing"
-	"-U" "${CNF}"
-	)
-
-add_test(disco_test_http 
-	disco_test "-c" "${CNF}/proto_test.js" 
-	"--service-api=http" "--service-port=8080" "--service-ip=127.0.0.1"
-	"--test-exec=${PYTHON} ${CNF}/disco_test.py http")
-
-add_test(disco_test_fastcgi_tcp 
-	disco_test "-c" "${CNF}/proto_test.js" 
-	"--service-api=fastcgi" "--service-port=8080" "--service-ip=127.0.0.1"
-	"--test-exec=${PYTHON} ${CNF}/disco_test.py fastcgi_tcp")
-
-add_test(disco_test_scgi_tcp 
-	disco_test "-c" "${CNF}/proto_test.js" 
-	"--service-api=scgi" "--service-port=8080" "--service-ip=127.0.0.1"
-	"--test-exec=${PYTHON} ${CNF}/disco_test.py scgi_tcp")
-
-add_test(secure_post_test
-	secure_post_test "-c" "${CNF}/secure_post_test.js" 
-	"--test-exec=${PYTHON} ${CNF}/secure_post_test.py"
-	)
-
-
-if(NOT IS_WINDOWS)
-	add_test(disco_test_fastcgi_unix 
-		disco_test "-c" "${CNF}/proto_test.js" 
-		"--service-api=fastcgi" "--service-socket=/tmp/cppcms_test_socket"
-		"--test-exec=${PYTHON} ${CNF}/disco_test.py fastcgi_unix")
-
-	add_test(disco_test_scgi_unix 
-		disco_test "-c" "${CNF}/proto_test.js" 
-		"--service-api=scgi" "--service-socket=/tmp/cppcms_test_socket"
-		"--test-exec=${PYTHON} ${CNF}/disco_test.py scgi_unix")
-endif()
-
-if(NOT DISABLE_GZIP)
-	add_test(gzip_test
-		gzip_test "--service-api=http"  "--http-script=/test"
-		"--test-exec=${PYTHON} ${CNF}/gzip_test.py")
-	if(NOT DISABLE_TCPCACHE)
-		add_test(cache_frontend_test cache_frontend_test)
-	endif()
-endif()
-
-
-
-
-if(NOT IS_WINDOWS)
-	add_test(cppcms_service_test "${CNF}/service_test" "${PYTHON}" "${CMAKE_CURRENT_BINARY_DIR}")
-endif()
-
-
-add_test(external_session_test external_session_test "${CNF}/external_session_test.js")
-foreach(LOC client server both)
-	foreach(EXP renew browser fixed)
-		add_test(session_interface_test_${LOC}_${EXP}
-			 session_interface_test -c "${CNF}/session_interface_test.js"
-			 "--session-expire=${EXP}" "--session-location=${LOC}"
-			 "--test-exec=${PYTHON} ${CNF}/session_interface_test.py ${LOC} ${EXP}")
-	endforeach()
-endforeach()
-
-foreach(TYPE async sync nonblocking)
-	add_test(proto_test_${TYPE}_http 
-		proto_test "-c" "${CNF}/proto_test.js" 
-		"--test-async=${TYPE}" "--service-api=http" "--service-port=8080" "--service-ip=127.0.0.1"
-		"--test-exec=${PYTHON} ${CNF}/proto_test.py http")
-	add_test(proto_test_${TYPE}_scgi 
-		proto_test "-c" "${CNF}/proto_test.js" 
-		"--test-async=${TYPE}" "--service-api=scgi" "--service-port=8080" "--service-ip=127.0.0.1"
-		"--test-exec=${PYTHON} ${CNF}/proto_test.py scgi_tcp")
-	add_test(proto_test_${TYPE}_fastcgi 
-		proto_test "-c" "${CNF}/proto_test.js" 
-		"--test-async=${TYPE}" "--service-api=fastcgi" "--service-port=8080" "--service-ip=127.0.0.1"
-		"--test-exec=${PYTHON} ${CNF}/proto_test.py fastcgi_tcp")
-	if(NOT IS_WINDOWS)
-		add_test(proto_test_${TYPE}_scgi_unix
-			proto_test "-c" "${CNF}/proto_test.js" 
-			"--test-async=${TYPE}" "--service-api=scgi" "--service-socket=/tmp/cppcms_test_socket"
-			"--test-exec=${PYTHON} ${CNF}/proto_test.py scgi_unix")
-		add_test(proto_test_${TYPE}_fastcgi_unix
-			proto_test "-c" "${CNF}/proto_test.js" 
-			"--test-async=${TYPE}" "--service-api=fastcgi" "--service-socket=/tmp/cppcms_test_socket"
-			"--test-exec=${PYTHON} ${CNF}/proto_test.py fastcgi_unix")
-	endif()
-endforeach()
-
-if(NOT DISABLE_SHARED)
-	add_library(loadable_storage SHARED tests/loadable_storage.cpp)
-	target_link_libraries(loadable_storage ${CPPCMS_LIB})
-	if(WIN32 OR CYGWIN)
-		set_target_properties(loadable_storage PROPERTIES COMPILE_DEFINITIONS DLL_EXPORT)
-	endif()
-	add_test(loadable_storage_pass 
-		loadable_storage_test
-		--service-api=http
-		--session-location=server
-		--session-server-storage=external
-		"--session-server-shared_object=${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}loadable_storage${CMAKE_SHARED_LIBRARY_SUFFIX}"
-		--session-server-entry_point=my_sessions_generator
-		--session-server-settings-must_be_set=false
-		)
-	add_test(loadable_storage_fail
-		loadable_storage_test
-		--service-api=http
-		--session-location=server
-		--session-server-storage=external
-		"--session-server-shared_object=${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}loadable_storage${CMAKE_SHARED_LIBRARY_SUFFIX}"
-		--session-server-entry_point=my_sessions_generator
-		--session-server-settings-must_be_set_incorrect=false
-		)
-	set_tests_properties(loadable_storage_fail PROPERTIES WILL_FAIL TRUE)
-endif()
-
-
-
-set(TESTS_WITH_TIMEOUT
-	forwarder_test 
-	jsonrpc_test 
-	proto_test_sync_http
-	proto_test_async_http
-	proto_test_sync_scgi
-	proto_test_async_scgi)
-
-if(NOT DISABLE_TCPCACHE)
-	set(TESTS_WITH_TIMEOUT ${TESTS_WITH_TIMEOUT} cache_backend_test)
-endif()
-
-set_tests_properties( 
-	${TESTS_WITH_TIMEOUT}
-	PROPERTIES TIMEOUT 120)
-
-if(NOT IS_WINDOWS)
-	set_tests_properties(
-		proto_test_sync_scgi_unix
-		proto_test_async_scgi_unix
-		PROPERTIES TIMEOUT 120)
-
-endif()
-
-
diff --git a/booster/CMakeLists.txt b/booster/CMakeLists.txt
index 4f81833..fa73579 100644
--- a/booster/CMakeLists.txt
+++ b/booster/CMakeLists.txt
@@ -674,77 +674,6 @@ macro(add_booster_param_test MODULE TEST PARAMETER)
 	set_tests_properties(${TEST_NAME} PROPERTIES TIMEOUT 20)
 endmacro()
 
-macro(add_booster_test MODULE TEST)
-	add_booster_param_test(${MODULE} ${TEST} "")
-endmacro()
-
-add_booster_test(function function)
-add_booster_test(function callback)
-add_booster_test(ptime posix_time)
-add_booster_test(thread thread)
-if(UNIX)
-	add_booster_test(thread fork)
-endif()
-
-add_booster_test(smart_ptr shared_ptr)
-add_booster_test(smart_ptr atomic_counter)
-add_booster_test(smart_ptr sp_counter)
-
-add_booster_test(log log)
-add_booster_test(nowide nowide)
-add_booster_test(iostreams streambuf)
-
-add_booster_test(regex regex)
-add_booster_test(aio reactor)
-add_booster_test(aio timer)
-add_booster_test(aio event_loop)
-add_booster_test(aio socket)
-add_booster_test(aio endpoint)
-add_booster_test(backtrace backtrace)
-if(NOT IS_WINDOWS)
-	add_booster_test(aio prefork)
-endif()
-
-add_booster_test(locale codepage)
-add_booster_param_test(locale message "${CMAKE_CURRENT_SOURCE_DIR}/lib/locale/test")
-add_booster_test(locale ios_prop)
-add_booster_test(locale codepage_converter)
-add_booster_test(locale date_time)
-add_booster_test(locale generator)
-add_booster_test(locale config)
-add_booster_test(locale utf)
-add_booster_test(locale codecvt)
-
-if(NOT DISABLE_ICU_LOCALE)
-	add_booster_test(locale collate)
-	add_booster_test(locale convert)
-	add_booster_test(locale boundary)
-	add_booster_test(locale formatting)
-	add_booster_test(locale icu_vs_os_timezone)
-	if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
-		set_target_properties(test_locale_formatting PROPERTIES COMPILE_FLAGS "-O0")
-	endif()
-endif()
-
-if(NOT DISABLE_STD_LOCALE)
-	add_booster_test(locale std_convert)
-	add_booster_test(locale std_formatting)
-	add_booster_test(locale std_collate)
-endif()
-
-if(NOT DISABLE_POSIX_LOCALE)
-	add_booster_test(locale posix_collate)
-	add_booster_test(locale posix_convert)
-	add_booster_test(locale posix_formatting)
-endif()
-
-
-if(NOT DISABLE_WINAPI_LOCALE)
-	add_booster_test(locale winapi_formatting)
-	add_booster_test(locale winapi_collate)
-	add_booster_test(locale winapi_convert)
-endif()
-
 set(BOOSTER_LIBRARY_PREFIX ${CMAKE_SHARED_LIBRARY_PREFIX})
 set(BOOSTER_LIBRARY_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
 
@@ -755,5 +684,3 @@ install(TARGETS ${LINK_LIBS}
 	LIBRARY DESTINATION ${LIBDIR}
 	ARCHIVE DESTINATION ${LIBDIR}
 	PUBLIC_HEADER DESTINATION include/booster)
-
-
